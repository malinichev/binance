{"version":3,"sources":["redux/app-reduser.js","components/pages/curr-page/curr-page.jsx","components/pages/curr-page/index.js","components/pages/curr-page/curr-page-container.jsx","components/select-side/index.js","components/select-side/select-side.js","components/app/index.js","components/app/app.js","redux/redux-store.js","serviceWorker.js","index.js","components/app/style.module.css","components/pages/curr-page/style.module.css"],"names":["initState","data","isDataLoad","isError","curr","setData","dispatch","type","setDataAC","appReduser","state","action","slice","isLoad","CurrPage","props","className","s","ask","style","color","map","el","key","E","a","bid","b","CurrPageContainer","connect","app","useEffect","setBookTicket","bookTicket","SelectSide","setCurr","currAC","Dropdown","Toggle","variant","id","Menu","Item","as","onClick","e","to","App","useState","ws","WebSocket","onmessage","evt","result","JSON","parse","close","coverTAg","tag","path","exact","render","reducers","combineReducers","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.709681d2.chunk.js","sourcesContent":["\n\n\n\nconst WATH_CURR = 'app/WATH_CURR';\nconst IS_ERROR = 'app/IS_ERROR';\nconst IS_DATA = 'app/IS_DATA';\n\n\nconst initState = {\n        data: [],\n        isDataLoad:false,\n        isError:false,\n        curr: 'btcusdt'\n};\n\nconst appReduser = (state = initState, action) => {\n    switch (action.type) {\n       \n        case IS_DATA:\n            \n            return {\n                ...state,\n                ...state.data,\n\n                data: [ ...state.data.slice(-9), action.data]  \n            };\n           \n       \n        case WATH_CURR:\n            \n            return {\n                ...state,\n                ...state.data,\n                data:[],\n                curr: action.curr  \n            };\n       \n        case IS_ERROR:\n            return {\n                ...state,\n                isLoad: false,\n                isError: action.isError  \n            };\n      \n        default:\n            return state;\n    }\n};\n\n\n\nexport const currAC = (curr) => ({\n    type: WATH_CURR,\n    curr\n})\nexport const setDataAC = (data) => ({\n    type: IS_DATA,\n    data\n})\n\nexport const isError = (isError) => ({\n\n    type: IS_ERROR,\n    isError\n})\n\n\nexport const setData = (data) => (dispatch) => {\n    dispatch(setDataAC(data))\n}\nexport const setCurr = (curr) => (dispatch) => {\n    dispatch(currAC(curr))\n    // dispatch(setDataAC())\n}\n// export const initializeApp = () => async (dispatch) => {\n\n//     try{\n        \n//         dispatch(isDataLoad(false));\n        \n//         // dispatch(setIsData({'ddd':'dddd', 'ddd3':'dddd3'}));\n//         // dispatch(isError(false));\n\n//         // dispatch(isDataLoad(true));\n//         // dispatch(isError(false));\n//     }catch(err){\n//         console.log('errrr')\n//     }  \n// }\n\n\nexport default appReduser","import React from 'react';\nimport s from \"./style.module.css\"\n\n\nconst CurrPage = (props) => {\n//    console.log(props)\n    return (\n        <>\n              \n                    <div className={s.ask}>\n                        <h3 style={{color:'red'}}>ASK</h3>\n                        {\n                            !props.data?null:\n                            props.data.map(el=>{\n                                return(\n                                    <span key={el.E}>{el.a}</span>\n                                );\n                            })\n                            \n                            \n                        }\n                    </div>\n                    <div className={s.bid}>\n                    <h3 style={{color:'green'}}>BID</h3>\n                        {\n                            !props.data?null:\n                            props.data.map(el=>{\n                                return(\n                                    <span key={el.E+11}>{el.b}</span>\n                                );\n                            })\n                        }\n                    </div>\n            \n        </>\n    );\n}\nexport default CurrPage","import CurrPageContainer from \"./curr-page-container\"\n\nexport default CurrPageContainer","import React,{useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport CurrPage from './curr-page';\n\nimport {setData} from '../../../redux/app-reduser';\n\n\nconst CurrPageContainer = (props) => {\n  \n  useEffect(() => {\n    props.setBookTicket(props.bookTicket)\n  }, [props]);\n\n  \n          \n    return (\n       <>\n    \n        <CurrPage data={props.data}/>\n       </>\n    );\n}\n\nconst mapStateToProps = (state /*, ownProps*/) => {\n  return {\n    data: state.app.data,\n\n  }\n}\n\n\nexport default connect(mapStateToProps,{setData})(CurrPageContainer)","import SelectSide from './select-side';\n\nexport default SelectSide;","import React, {useEffect}  from 'react';\nimport { connect } from 'react-redux';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport {setCurr} from '../../redux/app-reduser';\n\n\n\nconst SelectSide = ({bookTicket, setBookTicket, setCurr, curr}) => {\n  // const [bookTicket, setBookTicket] =useState('BTC-USDT')\n\n  \n    useEffect(() => {\n        // window.addEventListener('scroll', handleScroll, true);\n        return () => {\n            // window.removeEventListener('scroll', handleScroll);\n        };\n    }, []);\n\n\n\n  return (\n  \n    <>\n            \n                <Dropdown>\n                  <Dropdown.Toggle \n                    variant=\"success\" id=\"dropdown-basic\"\n                   \n                    >\n                    { curr}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                  <Dropdown.Item\n                    as=\"button\"\n                    onClick={e=> setCurr('btcusdt')}\n                  >\n                    <Link to=\"/\" className=\"dropdown-item\" >\n                    BTC-USDT\n                                </Link>\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                  as=\"button\"\n                    onClick={e=> setCurr('etcusdt')}\n                  >\n                    <Link to=\"/etcusdt\" className=\"dropdown-item\">\n                    ETC-USDT\n                                </Link>\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                  as=\"button\"\n                    onClick={e=> setCurr('xrpusdt')}\n                  >\n                    <Link to=\"/xrpusdt\" className=\"dropdown-item\">\n                    XRP-USDT\n                                </Link>\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                  as=\"button\"\n                    onClick={e=> setCurr('btsusdt')}\n                  >\n                    <Link to=\"/btsusdt\" className=\"dropdown-item\">\n                    BTS-USDT\n                                </Link>\n                  </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n               \n        </>\n            \n         \n    \n  );\n};\n\n\n\n\n\n\n// export default SelectSide;\n\nconst mapStateToProps = (state /*, ownProps*/) => {\n  return {\n    curr: state.app.curr,\n\n  }\n}\n\n\nexport default connect(mapStateToProps,{setCurr})(SelectSide)\n","import App from './app';\n\nexport default App;\n","import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\nimport {setData} from '../../redux/app-reduser';\n\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport CurrPageContainer from '../pages/curr-page'\nimport SelectSide from '../select-side';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport s from './style.module.css';\n\nconst App =  (props) => {\n  const [bookTicket, setBookTicket] = useState('btcusdt')\n  let ws =  new WebSocket(`wss://stream.binance.com:9443/ws/${props.curr}@ticker`);\n  \n  useEffect(() => {\n    \n    ws.onmessage = evt => { \n      \n      \n      let result = JSON.parse(evt.data);\n    \n      props.setData(result)\n  }\n    \n    return () => {\n      ws.close()\n    };\n    // eslint-disable-next-line\n  }, [bookTicket,ws]);\n  \n  return (\n    <HashRouter>\n      <div className={s.coverTAg}>\n                <div className={s.tag}>\n                <SelectSide setBookTicket={setBookTicket} bookTicket={bookTicket}/>\n                </div>\n                <div className={s.tag}>\n                \n                <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={() => {\n            \n            return (            \n              <CurrPageContainer ws={ws} setBookTicket={setBookTicket} bookTicket={bookTicket}/>\n              );\n          }}\n           />\n        <Route\n          path=\"/etcusdt\"\n          exact\n          render={() => {\n            // setBookTicket('etcusdt')\n            return (            \n              <CurrPageContainer ws={ws} setBookTicket={setBookTicket} bookTicket={bookTicket}/>\n              );\n          }}\n           />\n        <Route\n          path=\"/xrpusdt\"\n          exact\n          render={() => {\n            \n            return (            \n              <CurrPageContainer ws={ws} setBookTicket={setBookTicket} bookTicket={bookTicket}/>\n              );\n          }}\n           />\n        <Route\n          path=\"/btsusdt\"\n          exact\n          render={() => {\n            \n            return (            \n              <CurrPageContainer ws={ws} setBookTicket={setBookTicket} bookTicket={bookTicket}/>\n              );\n          }}\n           />\n         \n      </Switch>\n                    \n                </div>\n               \n      </div>\n      \n          \n      \n      \n    </HashRouter>\n  );\n};\n\nconst mapStateToProps = (state /*, ownProps*/) => {\n  return {\n    curr: state.app.curr,\n    // data: state.app.data,\n    // isIndex: state.app.isIndex,\n    \n    // isError: state.app.isError\n  }\n}\n\n\nexport default connect(mapStateToProps,{setData})(App)","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\nimport { reducer as formReducer } from 'redux-form'\n\n\n\n\n// import homepageReduser from './homepage-reduser';\n// import catalogReduser from './catalog-reduser';\n\nimport appReduser from './app-reduser';\n// import authReduser from './auth-reduser';\n\n\nimport thunkMiddleware from 'redux-thunk';\n\n\nlet reducers = combineReducers({\n    app: appReduser,\n    // catalogAdnItems: catalogReduser,\n    // auth: authReduser,\n    // homepage: homepageReduser,\n    \n    form: formReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n    ));\n\n\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.css';\nimport store from './redux/redux-store';\n\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\n\n   \n    ReactDOM.render(\n        <Provider store={store}>\n            \n                <App />\n            \n            \n        </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coverTAg\":\"style_coverTAg__en8Px\",\"tag\":\"style_tag__1pjHj\",\"ask\":\"style_ask__36X_y\",\"bid\":\"style_bid__QGNS6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coverTAg\":\"style_coverTAg__1dDO2\",\"tag\":\"style_tag__21Cpt\",\"ask\":\"style_ask__2LDoe\",\"bid\":\"style_bid__3VkAM\"};"],"sourceRoot":""}